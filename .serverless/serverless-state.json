{
  "service": {
    "service": "pesa-serverless-backend",
    "serviceObject": {
      "name": "pesa-serverless-backend"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "apiGateway": {
        "minimumCompressionSize": 1024,
        "shouldStartNameWithService": true
      },
      "environment": {
        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
        "FIREBASE_PROJECT_ID": "panamaesportacademy",
        "FIREBASE_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDar4+tkYi33Hu2\\nWdUCxiJ68kxGEHAL5hvc0sZgVeA2DJW05UNx9CMcH9CmPDQDJjbINRCrWvlregQm\\nzPn8IgURHFX32+HcgUXmtOd6FP5r5qlFHcGl6/QTqnXFIeFcIsKPL+8nBaE66d39\\nPwdaKIfGGXhkCmtmiDO4j6+wNXrvVuagrdil1CaBrrwAXYLRjB2sWup+e4HOMVD2\\nlj+lyZCVqFvkqcyMQdHAHP49zEuKkqlt4Mo2nUxWogzQEvapXVI7oMWebw1hyuAA\\nJu4XkoBDqCOAE0OySuQYTCPzlwCJgBecVVaUOlUVLVQpaexcKp7bZzeXAezevkQW\\n2Kx6GDhPAgMBAAECggEAIOZoDkEmjsq7+KDRMXv6NKxT7001Hi/TTJ3lPG8PA/Km\\nvzKoD/Jz1HJbjfbhYwE9HVJmcfEw3wuEqQsOJ5w9Tj1eGE5bT4pJ/ZMv0/0T6HXT\\noiiqOTp4sPtkgRuUxQDHFosBRsn2X1+khx9pYsCq6ecWZq6ZSTFVM/9h+3eVntYZ\\nIrJYIPPJBzci/xpuIXG3HF2z+NwJWq7JeWsGRbYvesGBJ6E5Vu1gLXjAU8GKJV/y\\n4xNc13W/vsklufSrlseSHzIZprIZ6Onn7EKIXTrP3YAdeds8XOO/hnbVjxYbQ9tj\\nnf018IGaDVhRhqPPjjr26TUxWqT+MYE4mrrJNTYRmQKBgQD5QSTjUyY31sFQqVrN\\npPpEu1wgNETvYz4XSIyc5VOVFn/kbuIhw6LOudpYvoIgMuKeym0wEBQ3Ge284Vji\\nQy6b91SOhTX9D6emKStWQf7EALnU5//Hjqbll8DvEgeNA/zA6VyOJb7N5Q2EFlWV\\nWDUEP02G2AsESugfRNOH8hHQXQKBgQDgmqJ+lIkzrlMQdVfbKclwpimClnG/coCH\\nKSx2ReWtGDFFWGm/A7/YaYhZRR2d85NEKFbhCbDoLwhWQaoAk5/m4M4eckLamaXz\\nvYaf7sRAbeTN/keDBnHzNfTEt5N1PHMbdu3qFIB/rVCYM0ZyMMBxS8XGu7xjl6ay\\nCIAg/dpQmwKBgDkpvYH88cjgkZkkHdUHvvXAWlJwalbUVcsVMlpRJagNbus+mtHP\\ngikS6oZruoAT63ErT3s0VM6GPcWRkMbjTW8re9LrrgQJcRNkYbH4lKry16uCQWDM\\n0G3bLb4mTmECxxae7kETWvzxSPZAAQStJAuDUQ5Zwb0MSMvTBwgodflpAoGBAIyn\\nKdVdDWKo62mmImOkEnsSA3K85fS/Ls/1r9tNQFyahthnWql9HpnW1MUarEZq77FC\\nFc4NdJSiR3VE38JGsF80LsAQS997UtqFuJXVP18dsqhxcbUSxy9IfcTnNVe4iFkN\\nrEXnmuTZ01vM2HPQJeONUQh4Lqyrnn9lJWADuMC7AoGBAIlB2dp0aFwXWXVRTdTG\\nOPHsx4tHC/z7zQEBD9smgfRhgsObh0fywU451e5DP4vAqgGb63sDCQ1Q3Vk6bXCU\\nZjw6meW8TzHeMmpoHxwErfmmNZ4oz92sxQO9r156FThleT3dWW3NUWhSRZiS+mIT\\nQ5ECeKvy0baruJkMJuTOjVX4\\n-----END PRIVATE KEY-----\\n",
        "FIREBASE_CLIENT_EMAIL": "firebase-adminsdk-yz4aw@panamaesportacademy.iam.gserviceaccount.com",
        "PG_DB_HOST": "serverless-pesa.cr9bout85w1m.us-east-1.rds.amazonaws.com",
        "PG_DB_PORT": "5432",
        "PG_DB_NAME": "pesa_db",
        "PG_DB_USER": "stpancar",
        "PG_DB_PASSWORD": "m1ZCMLW91Cvuv4lkejL6"
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "AuthorizerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/pesa-serverless-backend-dev-authorizer"
            }
          },
          "MeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/pesa-serverless-backend-dev-me"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "pesa-serverless-backend",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/pesa-serverless-backend-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/pesa-serverless-backend-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "pesa-serverless-backend",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AuthorizerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/pesa-serverless-backend/dev/1665808894768-2022-10-15T04:41:34.768Z/authorizer.zip"
              },
              "Handler": "src/functions/authorizer/handler.main",
              "Runtime": "nodejs14.x",
              "FunctionName": "pesa-serverless-backend-dev-authorizer",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "FIREBASE_PROJECT_ID": "panamaesportacademy",
                  "FIREBASE_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDar4+tkYi33Hu2\\nWdUCxiJ68kxGEHAL5hvc0sZgVeA2DJW05UNx9CMcH9CmPDQDJjbINRCrWvlregQm\\nzPn8IgURHFX32+HcgUXmtOd6FP5r5qlFHcGl6/QTqnXFIeFcIsKPL+8nBaE66d39\\nPwdaKIfGGXhkCmtmiDO4j6+wNXrvVuagrdil1CaBrrwAXYLRjB2sWup+e4HOMVD2\\nlj+lyZCVqFvkqcyMQdHAHP49zEuKkqlt4Mo2nUxWogzQEvapXVI7oMWebw1hyuAA\\nJu4XkoBDqCOAE0OySuQYTCPzlwCJgBecVVaUOlUVLVQpaexcKp7bZzeXAezevkQW\\n2Kx6GDhPAgMBAAECggEAIOZoDkEmjsq7+KDRMXv6NKxT7001Hi/TTJ3lPG8PA/Km\\nvzKoD/Jz1HJbjfbhYwE9HVJmcfEw3wuEqQsOJ5w9Tj1eGE5bT4pJ/ZMv0/0T6HXT\\noiiqOTp4sPtkgRuUxQDHFosBRsn2X1+khx9pYsCq6ecWZq6ZSTFVM/9h+3eVntYZ\\nIrJYIPPJBzci/xpuIXG3HF2z+NwJWq7JeWsGRbYvesGBJ6E5Vu1gLXjAU8GKJV/y\\n4xNc13W/vsklufSrlseSHzIZprIZ6Onn7EKIXTrP3YAdeds8XOO/hnbVjxYbQ9tj\\nnf018IGaDVhRhqPPjjr26TUxWqT+MYE4mrrJNTYRmQKBgQD5QSTjUyY31sFQqVrN\\npPpEu1wgNETvYz4XSIyc5VOVFn/kbuIhw6LOudpYvoIgMuKeym0wEBQ3Ge284Vji\\nQy6b91SOhTX9D6emKStWQf7EALnU5//Hjqbll8DvEgeNA/zA6VyOJb7N5Q2EFlWV\\nWDUEP02G2AsESugfRNOH8hHQXQKBgQDgmqJ+lIkzrlMQdVfbKclwpimClnG/coCH\\nKSx2ReWtGDFFWGm/A7/YaYhZRR2d85NEKFbhCbDoLwhWQaoAk5/m4M4eckLamaXz\\nvYaf7sRAbeTN/keDBnHzNfTEt5N1PHMbdu3qFIB/rVCYM0ZyMMBxS8XGu7xjl6ay\\nCIAg/dpQmwKBgDkpvYH88cjgkZkkHdUHvvXAWlJwalbUVcsVMlpRJagNbus+mtHP\\ngikS6oZruoAT63ErT3s0VM6GPcWRkMbjTW8re9LrrgQJcRNkYbH4lKry16uCQWDM\\n0G3bLb4mTmECxxae7kETWvzxSPZAAQStJAuDUQ5Zwb0MSMvTBwgodflpAoGBAIyn\\nKdVdDWKo62mmImOkEnsSA3K85fS/Ls/1r9tNQFyahthnWql9HpnW1MUarEZq77FC\\nFc4NdJSiR3VE38JGsF80LsAQS997UtqFuJXVP18dsqhxcbUSxy9IfcTnNVe4iFkN\\nrEXnmuTZ01vM2HPQJeONUQh4Lqyrnn9lJWADuMC7AoGBAIlB2dp0aFwXWXVRTdTG\\nOPHsx4tHC/z7zQEBD9smgfRhgsObh0fywU451e5DP4vAqgGb63sDCQ1Q3Vk6bXCU\\nZjw6meW8TzHeMmpoHxwErfmmNZ4oz92sxQO9r156FThleT3dWW3NUWhSRZiS+mIT\\nQ5ECeKvy0baruJkMJuTOjVX4\\n-----END PRIVATE KEY-----\\n",
                  "FIREBASE_CLIENT_EMAIL": "firebase-adminsdk-yz4aw@panamaesportacademy.iam.gserviceaccount.com",
                  "PG_DB_HOST": "serverless-pesa.cr9bout85w1m.us-east-1.rds.amazonaws.com",
                  "PG_DB_PORT": "5432",
                  "PG_DB_NAME": "pesa_db",
                  "PG_DB_USER": "stpancar",
                  "PG_DB_PASSWORD": "m1ZCMLW91Cvuv4lkejL6"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AuthorizerLogGroup"
            ]
          },
          "MeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/pesa-serverless-backend/dev/1665808894768-2022-10-15T04:41:34.768Z/me.zip"
              },
              "Handler": "src/functions/me/handler.main",
              "Runtime": "nodejs14.x",
              "FunctionName": "pesa-serverless-backend-dev-me",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "FIREBASE_PROJECT_ID": "panamaesportacademy",
                  "FIREBASE_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDar4+tkYi33Hu2\\nWdUCxiJ68kxGEHAL5hvc0sZgVeA2DJW05UNx9CMcH9CmPDQDJjbINRCrWvlregQm\\nzPn8IgURHFX32+HcgUXmtOd6FP5r5qlFHcGl6/QTqnXFIeFcIsKPL+8nBaE66d39\\nPwdaKIfGGXhkCmtmiDO4j6+wNXrvVuagrdil1CaBrrwAXYLRjB2sWup+e4HOMVD2\\nlj+lyZCVqFvkqcyMQdHAHP49zEuKkqlt4Mo2nUxWogzQEvapXVI7oMWebw1hyuAA\\nJu4XkoBDqCOAE0OySuQYTCPzlwCJgBecVVaUOlUVLVQpaexcKp7bZzeXAezevkQW\\n2Kx6GDhPAgMBAAECggEAIOZoDkEmjsq7+KDRMXv6NKxT7001Hi/TTJ3lPG8PA/Km\\nvzKoD/Jz1HJbjfbhYwE9HVJmcfEw3wuEqQsOJ5w9Tj1eGE5bT4pJ/ZMv0/0T6HXT\\noiiqOTp4sPtkgRuUxQDHFosBRsn2X1+khx9pYsCq6ecWZq6ZSTFVM/9h+3eVntYZ\\nIrJYIPPJBzci/xpuIXG3HF2z+NwJWq7JeWsGRbYvesGBJ6E5Vu1gLXjAU8GKJV/y\\n4xNc13W/vsklufSrlseSHzIZprIZ6Onn7EKIXTrP3YAdeds8XOO/hnbVjxYbQ9tj\\nnf018IGaDVhRhqPPjjr26TUxWqT+MYE4mrrJNTYRmQKBgQD5QSTjUyY31sFQqVrN\\npPpEu1wgNETvYz4XSIyc5VOVFn/kbuIhw6LOudpYvoIgMuKeym0wEBQ3Ge284Vji\\nQy6b91SOhTX9D6emKStWQf7EALnU5//Hjqbll8DvEgeNA/zA6VyOJb7N5Q2EFlWV\\nWDUEP02G2AsESugfRNOH8hHQXQKBgQDgmqJ+lIkzrlMQdVfbKclwpimClnG/coCH\\nKSx2ReWtGDFFWGm/A7/YaYhZRR2d85NEKFbhCbDoLwhWQaoAk5/m4M4eckLamaXz\\nvYaf7sRAbeTN/keDBnHzNfTEt5N1PHMbdu3qFIB/rVCYM0ZyMMBxS8XGu7xjl6ay\\nCIAg/dpQmwKBgDkpvYH88cjgkZkkHdUHvvXAWlJwalbUVcsVMlpRJagNbus+mtHP\\ngikS6oZruoAT63ErT3s0VM6GPcWRkMbjTW8re9LrrgQJcRNkYbH4lKry16uCQWDM\\n0G3bLb4mTmECxxae7kETWvzxSPZAAQStJAuDUQ5Zwb0MSMvTBwgodflpAoGBAIyn\\nKdVdDWKo62mmImOkEnsSA3K85fS/Ls/1r9tNQFyahthnWql9HpnW1MUarEZq77FC\\nFc4NdJSiR3VE38JGsF80LsAQS997UtqFuJXVP18dsqhxcbUSxy9IfcTnNVe4iFkN\\nrEXnmuTZ01vM2HPQJeONUQh4Lqyrnn9lJWADuMC7AoGBAIlB2dp0aFwXWXVRTdTG\\nOPHsx4tHC/z7zQEBD9smgfRhgsObh0fywU451e5DP4vAqgGb63sDCQ1Q3Vk6bXCU\\nZjw6meW8TzHeMmpoHxwErfmmNZ4oz92sxQO9r156FThleT3dWW3NUWhSRZiS+mIT\\nQ5ECeKvy0baruJkMJuTOjVX4\\n-----END PRIVATE KEY-----\\n",
                  "FIREBASE_CLIENT_EMAIL": "firebase-adminsdk-yz4aw@panamaesportacademy.iam.gserviceaccount.com",
                  "PG_DB_HOST": "serverless-pesa.cr9bout85w1m.us-east-1.rds.amazonaws.com",
                  "PG_DB_PORT": "5432",
                  "PG_DB_NAME": "pesa_db",
                  "PG_DB_USER": "stpancar",
                  "PG_DB_PASSWORD": "m1ZCMLW91Cvuv4lkejL6"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "MeLogGroup"
            ]
          },
          "MeLambdaVersionrM2UXB1j8LJo0KklkU97EgbqEOTOjLmDxLAzw8zIYK0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MeLambdaFunction"
              },
              "CodeSha256": "ZCEOMeTnfH5cs4k+/tlf/MzQCPIsv26sPAQHvr99rPg="
            }
          },
          "AuthorizerLambdaVersionjTFqCEuF632ksqI1xpscKLGjoPqwpA4XltWjSuBI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuthorizerLambdaFunction"
              },
              "CodeSha256": "p8ettItJF5r6+3bnF3R4nu3r9d2FKruS22CilF7hFXc="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "pesa-serverless-backend-dev",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": "",
              "MinimumCompressionSize": 1024
            }
          },
          "ApiGatewayResourceMe": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "me",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodMeOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceMe"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodMeGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceMe"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "AuthorizerApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "MeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "AuthorizerApiGatewayAuthorizer"
          },
          "AuthorizerApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "AuthorizerResultTtlInSeconds": 300,
              "IdentitySource": "method.request.header.Authorization",
              "Name": "authorizer",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizerUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "AuthorizerLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              },
              "Type": "TOKEN"
            }
          },
          "ApiGatewayDeployment1665808893248": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodMeOptions",
              "ApiGatewayMethodMeGet"
            ]
          },
          "MeLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "MeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AuthorizerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AuthorizerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-pesa-serverless-backend-dev-ServerlessDeploymentBucketName"
            }
          },
          "MeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MeLambdaVersionrM2UXB1j8LJo0KklkU97EgbqEOTOjLmDxLAzw8zIYK0"
            },
            "Export": {
              "Name": "sls-pesa-serverless-backend-dev-MeLambdaFunctionQualifiedArn"
            }
          },
          "AuthorizerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuthorizerLambdaVersionjTFqCEuF632ksqI1xpscKLGjoPqwpA4XltWjSuBI"
            },
            "Export": {
              "Name": "sls-pesa-serverless-backend-dev-AuthorizerLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-pesa-serverless-backend-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "esbuild": {
        "bundle": true,
        "minify": true,
        "sourcemap": true,
        "exclude": [
          "aws-sdk",
          "pg-native"
        ],
        "target": "node14",
        "define": {},
        "platform": "node",
        "concurrency": 10,
        "packager": "yarn",
        "packagePath": "package.json"
      }
    },
    "plugins": [
      "serverless-esbuild",
      "serverless-offline",
      "serverless-dotenv-plugin"
    ],
    "pluginsData": {},
    "functions": {
      "authorizer": {
        "handler": "src/functions/authorizer/handler.main",
        "events": [],
        "name": "pesa-serverless-backend-dev-authorizer",
        "package": {
          "artifact": ".serverless/authorizer.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "AuthorizerLambdaVersionjTFqCEuF632ksqI1xpscKLGjoPqwpA4XltWjSuBI"
      },
      "me": {
        "handler": "src/functions/me/handler.main",
        "timeout": 30,
        "events": [
          {
            "http": {
              "method": "get",
              "path": "me",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "authorizer",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthorizerLambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "pesa-serverless-backend-dev-me",
        "package": {
          "artifact": ".serverless/me.zip"
        },
        "memory": 1024,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "MeLambdaVersionrM2UXB1j8LJo0KklkU97EgbqEOTOjLmDxLAzw8zIYK0"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.ts",
    "initialServerlessConfig": {
      "service": "pesa-serverless-backend",
      "frameworkVersion": "3",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "useDotenv": true,
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/pesa-serverless-backend/dev/code-artifacts"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/pesa-serverless-backend/dev/1665808894768-2022-10-15T04:41:34.768Z",
    "artifact": ""
  }
}